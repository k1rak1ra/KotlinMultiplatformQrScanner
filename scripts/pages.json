[{"name":"Back","description":"net.k1ra.kotlin_qr_scanner.CameraLens.Back","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-camera-lens/-back/index.html","searchKeys":["Back","Back","net.k1ra.kotlin_qr_scanner.CameraLens.Back"]},{"name":"DENIED","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionStatus.DENIED","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-status/-d-e-n-i-e-d/index.html","searchKeys":["DENIED","DENIED","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionStatus.DENIED"]},{"name":"Front","description":"net.k1ra.kotlin_qr_scanner.CameraLens.Front","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-camera-lens/-front/index.html","searchKeys":["Front","Front","net.k1ra.kotlin_qr_scanner.CameraLens.Front"]},{"name":"GALLERY","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionType.GALLERY","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-type/-g-a-l-l-e-r-y/index.html","searchKeys":["GALLERY","GALLERY","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionType.GALLERY"]},{"name":"GRANTED","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionStatus.GRANTED","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-status/-g-r-a-n-t-e-d/index.html","searchKeys":["GRANTED","GRANTED","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionStatus.GRANTED"]},{"name":"Rectangle","description":"net.k1ra.kotlin_qr_scanner.OverlayShape.Rectangle","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-overlay-shape/-rectangle/index.html","searchKeys":["Rectangle","Rectangle","net.k1ra.kotlin_qr_scanner.OverlayShape.Rectangle"]},{"name":"Square","description":"net.k1ra.kotlin_qr_scanner.OverlayShape.Square","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-overlay-shape/-square/index.html","searchKeys":["Square","Square","net.k1ra.kotlin_qr_scanner.OverlayShape.Square"]},{"name":"abstract fun askPermission(permission: PermissionType)","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionHandler.askPermission","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-handler/ask-permission.html","searchKeys":["askPermission","abstract fun askPermission(permission: PermissionType)","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionHandler.askPermission"]},{"name":"abstract fun isPermissionGranted(permission: PermissionType): Boolean","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionHandler.isPermissionGranted","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-handler/is-permission-granted.html","searchKeys":["isPermissionGranted","abstract fun isPermissionGranted(permission: PermissionType): Boolean","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionHandler.isPermissionGranted"]},{"name":"abstract fun launchSettings()","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionHandler.launchSettings","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-handler/launch-settings.html","searchKeys":["launchSettings","abstract fun launchSettings()","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionHandler.launchSettings"]},{"name":"abstract fun onPermissionStatus(permissionType: PermissionType, status: PermissionStatus)","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionCallback.onPermissionStatus","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-callback/on-permission-status.html","searchKeys":["onPermissionStatus","abstract fun onPermissionStatus(permissionType: PermissionType, status: PermissionStatus)","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionCallback.onPermissionStatus"]},{"name":"actual fun QrCodeScanner(modifier: <Error class: unknown class>, flashlightOn: Boolean, cameraLens: <Error class: unknown class>, onCompletion: (String) -> Unit, overlayShape: <Error class: unknown class>, overlayColor: <Error class: unknown class>, overlayBorderColor: <Error class: unknown class>, customOverlay: <Error class: unknown class>.() -> Unit?, permissionDeniedView: () -> Unit??)","description":"net.k1ra.kotlin_qr_scanner.QrCodeScanner","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-qr-code-scanner.html","searchKeys":["QrCodeScanner","actual fun QrCodeScanner(modifier: <Error class: unknown class>, flashlightOn: Boolean, cameraLens: <Error class: unknown class>, onCompletion: (String) -> Unit, overlayShape: <Error class: unknown class>, overlayColor: <Error class: unknown class>, overlayBorderColor: <Error class: unknown class>, customOverlay: <Error class: unknown class>.() -> Unit?, permissionDeniedView: () -> Unit??)","net.k1ra.kotlin_qr_scanner.QrCodeScanner"]},{"name":"actual fun scanImage(image: <Error class: unknown class>?, onCompletion: (String) -> Unit, onFailure: (String) -> Unit)","description":"net.k1ra.kotlin_qr_scanner.scanImage","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/scan-image.html","searchKeys":["scanImage","actual fun scanImage(image: <Error class: unknown class>?, onCompletion: (String) -> Unit, onFailure: (String) -> Unit)","net.k1ra.kotlin_qr_scanner.scanImage"]},{"name":"class OrientationListener(val orientationChanged: (UIDeviceOrientation) -> Unit) : NSObject","description":"net.k1ra.kotlin_qr_scanner.OrientationListener","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-orientation-listener/index.html","searchKeys":["OrientationListener","class OrientationListener(val orientationChanged: (UIDeviceOrientation) -> Unit) : NSObject","net.k1ra.kotlin_qr_scanner.OrientationListener"]},{"name":"class QRCodeAnalyzer(onQrCodeScanned: (result: String?) -> Unit) : BarcodeAnalyser","description":"net.k1ra.kotlin_qr_scanner.QRCodeAnalyzer","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-q-r-code-analyzer/index.html","searchKeys":["QRCodeAnalyzer","class QRCodeAnalyzer(onQrCodeScanned: (result: String?) -> Unit) : BarcodeAnalyser","net.k1ra.kotlin_qr_scanner.QRCodeAnalyzer"]},{"name":"class ScannerCameraCoordinator(val camera: AVCaptureDevice, val onScanned: (String) -> Unit) : NSObject, AVCaptureMetadataOutputObjectsDelegateProtocol","description":"net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-scanner-camera-coordinator/index.html","searchKeys":["ScannerCameraCoordinator","class ScannerCameraCoordinator(val camera: AVCaptureDevice, val onScanned: (String) -> Unit) : NSObject, AVCaptureMetadataOutputObjectsDelegateProtocol","net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator"]},{"name":"constructor(camera: AVCaptureDevice, onScanned: (String) -> Unit)","description":"net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.ScannerCameraCoordinator","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-scanner-camera-coordinator/-scanner-camera-coordinator.html","searchKeys":["ScannerCameraCoordinator","constructor(camera: AVCaptureDevice, onScanned: (String) -> Unit)","net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.ScannerCameraCoordinator"]},{"name":"constructor(elementId: String, configOrVerbosityFlag: Boolean)","description":"Html5Qrcode.Html5Qrcode","location":"-kotlin-multiplatform-qr-scanner/[root]/-html5-qrcode/-html5-qrcode.html","searchKeys":["Html5Qrcode","constructor(elementId: String, configOrVerbosityFlag: Boolean)","Html5Qrcode.Html5Qrcode"]},{"name":"constructor(onQrCodeScanned: (result: String?) -> Unit)","description":"net.k1ra.kotlin_qr_scanner.BarcodeAnalyser.BarcodeAnalyser","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-barcode-analyser/-barcode-analyser.html","searchKeys":["BarcodeAnalyser","constructor(onQrCodeScanned: (result: String?) -> Unit)","net.k1ra.kotlin_qr_scanner.BarcodeAnalyser.BarcodeAnalyser"]},{"name":"constructor(onQrCodeScanned: (result: String?) -> Unit)","description":"net.k1ra.kotlin_qr_scanner.QRCodeAnalyzer.QRCodeAnalyzer","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-q-r-code-analyzer/-q-r-code-analyzer.html","searchKeys":["QRCodeAnalyzer","constructor(onQrCodeScanned: (result: String?) -> Unit)","net.k1ra.kotlin_qr_scanner.QRCodeAnalyzer.QRCodeAnalyzer"]},{"name":"constructor(orientationChanged: (UIDeviceOrientation) -> Unit)","description":"net.k1ra.kotlin_qr_scanner.OrientationListener.OrientationListener","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-orientation-listener/-orientation-listener.html","searchKeys":["OrientationListener","constructor(orientationChanged: (UIDeviceOrientation) -> Unit)","net.k1ra.kotlin_qr_scanner.OrientationListener.OrientationListener"]},{"name":"enum CameraLens : Enum<CameraLens> ","description":"net.k1ra.kotlin_qr_scanner.CameraLens","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-camera-lens/index.html","searchKeys":["CameraLens","enum CameraLens : Enum<CameraLens> ","net.k1ra.kotlin_qr_scanner.CameraLens"]},{"name":"enum OverlayShape : Enum<OverlayShape> ","description":"net.k1ra.kotlin_qr_scanner.OverlayShape","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-overlay-shape/index.html","searchKeys":["OverlayShape","enum OverlayShape : Enum<OverlayShape> ","net.k1ra.kotlin_qr_scanner.OverlayShape"]},{"name":"enum PermissionStatus : Enum<PermissionStatus> ","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionStatus","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-status/index.html","searchKeys":["PermissionStatus","enum PermissionStatus : Enum<PermissionStatus> ","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionStatus"]},{"name":"enum PermissionType : Enum<PermissionType> ","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionType","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-type/index.html","searchKeys":["PermissionType","enum PermissionType : Enum<PermissionType> ","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionType"]},{"name":"expect fun QrCodeScanner(modifier: Modifier, flashlightOn: Boolean, cameraLens: CameraLens, onCompletion: (String) -> Unit, overlayShape: OverlayShape, overlayColor: Color, overlayBorderColor: Color, customOverlay: ContentDrawScope.() -> Unit?, permissionDeniedView: () -> Unit??)","description":"net.k1ra.kotlin_qr_scanner.QrCodeScanner","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-qr-code-scanner.html","searchKeys":["QrCodeScanner","expect fun QrCodeScanner(modifier: Modifier, flashlightOn: Boolean, cameraLens: CameraLens, onCompletion: (String) -> Unit, overlayShape: OverlayShape, overlayColor: Color, overlayBorderColor: Color, customOverlay: ContentDrawScope.() -> Unit?, permissionDeniedView: () -> Unit??)","net.k1ra.kotlin_qr_scanner.QrCodeScanner"]},{"name":"expect fun scanImage(image: ImageBitmap?, onCompletion: (String) -> Unit, onFailure: (String) -> Unit)","description":"net.k1ra.kotlin_qr_scanner.scanImage","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/scan-image.html","searchKeys":["scanImage","expect fun scanImage(image: ImageBitmap?, onCompletion: (String) -> Unit, onFailure: (String) -> Unit)","net.k1ra.kotlin_qr_scanner.scanImage"]},{"name":"external class Html5Qrcode(elementId: String, configOrVerbosityFlag: Boolean)","description":"Html5Qrcode","location":"-kotlin-multiplatform-qr-scanner/[root]/-html5-qrcode/index.html","searchKeys":["Html5Qrcode","external class Html5Qrcode(elementId: String, configOrVerbosityFlag: Boolean)","Html5Qrcode"]},{"name":"fun <Error class: unknown class>.toUIImage(): UIImage?","description":"net.k1ra.kotlin_qr_scanner.toUIImage","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/to-u-i-image.html","searchKeys":["toUIImage","fun <Error class: unknown class>.toUIImage(): UIImage?","net.k1ra.kotlin_qr_scanner.toUIImage"]},{"name":"fun AlertMessageDialog(title: String, message: String? = null, positiveButtonText: String? = null, negativeButtonText: String? = null, onPositiveClick: () -> Unit = {}, onNegativeClick: () -> Unit = {})","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.AlertMessageDialog","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker/-alert-message-dialog.html","searchKeys":["AlertMessageDialog","fun AlertMessageDialog(title: String, message: String? = null, positiveButtonText: String? = null, negativeButtonText: String? = null, onPositiveClick: () -> Unit = {}, onNegativeClick: () -> Unit = {})","net.k1ra.kotlin_qr_scanner.kmpImagePicker.AlertMessageDialog"]},{"name":"fun ByteArray.asJsArray(): Uint8Array","description":"net.k1ra.kotlin_qr_scanner.asJsArray","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/as-js-array.html","searchKeys":["asJsArray","fun ByteArray.asJsArray(): Uint8Array","net.k1ra.kotlin_qr_scanner.asJsArray"]},{"name":"fun Color.toArgb(): Int","description":"net.k1ra.kotlin_qr_scanner.toArgb","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/to-argb.html","searchKeys":["toArgb","fun Color.toArgb(): Int","net.k1ra.kotlin_qr_scanner.toArgb"]},{"name":"fun ImageBitmap.toBufferedImage(): BufferedImage","description":"net.k1ra.kotlin_qr_scanner.toBufferedImage","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/to-buffered-image.html","searchKeys":["toBufferedImage","fun ImageBitmap.toBufferedImage(): BufferedImage","net.k1ra.kotlin_qr_scanner.toBufferedImage"]},{"name":"fun ImageBitmap.toByteArray(): ByteArray","description":"net.k1ra.kotlin_qr_scanner.toByteArray","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/to-byte-array.html","searchKeys":["toByteArray","fun ImageBitmap.toByteArray(): ByteArray","net.k1ra.kotlin_qr_scanner.toByteArray"]},{"name":"fun ImageSourceOptionDialog(onDismissRequest: () -> Unit, onGalleryRequest: () -> Unit = {}, onCameraRequest: () -> Unit = {})","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.ImageSourceOptionDialog","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker/-image-source-option-dialog.html","searchKeys":["ImageSourceOptionDialog","fun ImageSourceOptionDialog(onDismissRequest: () -> Unit, onGalleryRequest: () -> Unit = {}, onCameraRequest: () -> Unit = {})","net.k1ra.kotlin_qr_scanner.kmpImagePicker.ImageSourceOptionDialog"]},{"name":"fun Modifier.clickableSingle(interactionSource: MutableInteractionSource? = null, indication: Indication? = null, enabled: Boolean = true, onClickLabel: String? = null, role: Role? = null, onClick: () -> Unit): Modifier","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.clickableSingle","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker/clickable-single.html","searchKeys":["clickableSingle","fun Modifier.clickableSingle(interactionSource: MutableInteractionSource? = null, indication: Indication? = null, enabled: Boolean = true, onClickLabel: String? = null, role: Role? = null, onClick: () -> Unit): Modifier","net.k1ra.kotlin_qr_scanner.kmpImagePicker.clickableSingle"]},{"name":"fun OverlayView(overlayShape: <Error class: unknown class>, overlayColor: <Error class: unknown class> = Color(0x88000000), overlayBorderColor: <Error class: unknown class> = Color.White, customOverlay: <Error class: unknown class>.() -> Unit? = null)","description":"net.k1ra.kotlin_qr_scanner.OverlayView","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-overlay-view.html","searchKeys":["OverlayView","fun OverlayView(overlayShape: <Error class: unknown class>, overlayColor: <Error class: unknown class> = Color(0x88000000), overlayBorderColor: <Error class: unknown class> = Color.White, customOverlay: <Error class: unknown class>.() -> Unit? = null)","net.k1ra.kotlin_qr_scanner.OverlayView"]},{"name":"fun OverlayView(overlayShape: OverlayShape, overlayColor: Color = Color(0x88000000), overlayBorderColor: Color = Color.White, customOverlay: ContentDrawScope.() -> Unit? = null)","description":"net.k1ra.kotlin_qr_scanner.OverlayView","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-overlay-view.html","searchKeys":["OverlayView","fun OverlayView(overlayShape: OverlayShape, overlayColor: Color = Color(0x88000000), overlayBorderColor: Color = Color.White, customOverlay: ContentDrawScope.() -> Unit? = null)","net.k1ra.kotlin_qr_scanner.OverlayView"]},{"name":"fun QRCodeComposable(modifier: Modifier, flashlightOn: Boolean, cameraLens: CameraLens, onCompletion: (String) -> Unit, overlayShape: OverlayShape, overlayColor: Color, overlayBorderColor: Color, customOverlay: ContentDrawScope.() -> Unit? = null, permissionDeniedView: () -> Unit?? = null)","description":"net.k1ra.kotlin_qr_scanner.QRCodeComposable","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-q-r-code-composable.html","searchKeys":["QRCodeComposable","fun QRCodeComposable(modifier: Modifier, flashlightOn: Boolean, cameraLens: CameraLens, onCompletion: (String) -> Unit, overlayShape: OverlayShape, overlayColor: Color, overlayBorderColor: Color, customOverlay: ContentDrawScope.() -> Unit? = null, permissionDeniedView: () -> Unit?? = null)","net.k1ra.kotlin_qr_scanner.QRCodeComposable"]},{"name":"fun QrScanner(modifier: Modifier, flashlightOn: Boolean, cameraLens: CameraLens, openImagePicker: Boolean, onCompletion: (String) -> Unit, imagePickerHandler: (Boolean) -> Unit, onFailure: (String) -> Unit, overlayShape: OverlayShape = OverlayShape.Square, overlayColor: Color = Color(0x88000000), overlayBorderColor: Color = Color.White, customOverlay: ContentDrawScope.() -> Unit? = null, permissionDeniedView: () -> Unit?? = null)","description":"net.k1ra.kotlin_qr_scanner.QrScanner","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-qr-scanner.html","searchKeys":["QrScanner","fun QrScanner(modifier: Modifier, flashlightOn: Boolean, cameraLens: CameraLens, openImagePicker: Boolean, onCompletion: (String) -> Unit, imagePickerHandler: (Boolean) -> Unit, onFailure: (String) -> Unit, overlayShape: OverlayShape = OverlayShape.Square, overlayColor: Color = Color(0x88000000), overlayBorderColor: Color = Color.White, customOverlay: ContentDrawScope.() -> Unit? = null, permissionDeniedView: () -> Unit?? = null)","net.k1ra.kotlin_qr_scanner.QrScanner"]},{"name":"fun RealDeviceCamera(camera: AVCaptureDevice, flashlightOn: Boolean, onQrCodeScanned: (String) -> Unit)","description":"net.k1ra.kotlin_qr_scanner.RealDeviceCamera","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-real-device-camera.html","searchKeys":["RealDeviceCamera","fun RealDeviceCamera(camera: AVCaptureDevice, flashlightOn: Boolean, onQrCodeScanned: (String) -> Unit)","net.k1ra.kotlin_qr_scanner.RealDeviceCamera"]},{"name":"fun convertImageBitmapToBitmap(imageBitmap: ImageBitmap): Bitmap","description":"net.k1ra.kotlin_qr_scanner.convertImageBitmapToBitmap","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/convert-image-bitmap-to-bitmap.html","searchKeys":["convertImageBitmapToBitmap","fun convertImageBitmapToBitmap(imageBitmap: ImageBitmap): Bitmap","net.k1ra.kotlin_qr_scanner.convertImageBitmapToBitmap"]},{"name":"fun onFound(code: String)","description":"net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.onFound","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-scanner-camera-coordinator/on-found.html","searchKeys":["onFound","fun onFound(code: String)","net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.onFound"]},{"name":"fun orientationDidChange(arg: NSNotification)","description":"net.k1ra.kotlin_qr_scanner.OrientationListener.orientationDidChange","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-orientation-listener/orientation-did-change.html","searchKeys":["orientationDidChange","fun orientationDidChange(arg: NSNotification)","net.k1ra.kotlin_qr_scanner.OrientationListener.orientationDidChange"]},{"name":"fun prepare(layer: CALayer)","description":"net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.prepare","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-scanner-camera-coordinator/prepare.html","searchKeys":["prepare","fun prepare(layer: CALayer)","net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.prepare"]},{"name":"fun register()","description":"net.k1ra.kotlin_qr_scanner.OrientationListener.register","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-orientation-listener/register.html","searchKeys":["register","fun register()","net.k1ra.kotlin_qr_scanner.OrientationListener.register"]},{"name":"fun scanFile(imageFile: File, showImage: Boolean): Promise<JsString>","description":"Html5Qrcode.scanFile","location":"-kotlin-multiplatform-qr-scanner/[root]/-html5-qrcode/scan-file.html","searchKeys":["scanFile","fun scanFile(imageFile: File, showImage: Boolean): Promise<JsString>","Html5Qrcode.scanFile"]},{"name":"fun scanQRCode(bufferedImage: BufferedImage): String?","description":"net.k1ra.kotlin_qr_scanner.scanQRCode","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/scan-q-r-code.html","searchKeys":["scanQRCode","fun scanQRCode(bufferedImage: BufferedImage): String?","net.k1ra.kotlin_qr_scanner.scanQRCode"]},{"name":"fun setCurrentOrientation(newOrientation: UIDeviceOrientation)","description":"net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.setCurrentOrientation","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-scanner-camera-coordinator/set-current-orientation.html","searchKeys":["setCurrentOrientation","fun setCurrentOrientation(newOrientation: UIDeviceOrientation)","net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.setCurrentOrientation"]},{"name":"fun setFrame(rect: CValue<CGRect>)","description":"net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.setFrame","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-scanner-camera-coordinator/set-frame.html","searchKeys":["setFrame","fun setFrame(rect: CValue<CGRect>)","net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.setFrame"]},{"name":"fun toJsArrayImpl(vararg x: Byte): Uint8Array","description":"net.k1ra.kotlin_qr_scanner.toJsArrayImpl","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/to-js-array-impl.html","searchKeys":["toJsArrayImpl","fun toJsArrayImpl(vararg x: Byte): Uint8Array","net.k1ra.kotlin_qr_scanner.toJsArrayImpl"]},{"name":"fun unregister()","description":"net.k1ra.kotlin_qr_scanner.OrientationListener.unregister","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-orientation-listener/unregister.html","searchKeys":["unregister","fun unregister()","net.k1ra.kotlin_qr_scanner.OrientationListener.unregister"]},{"name":"fun valueOf(value: String): CameraLens","description":"net.k1ra.kotlin_qr_scanner.CameraLens.valueOf","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-camera-lens/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CameraLens","net.k1ra.kotlin_qr_scanner.CameraLens.valueOf"]},{"name":"fun valueOf(value: String): OverlayShape","description":"net.k1ra.kotlin_qr_scanner.OverlayShape.valueOf","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-overlay-shape/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): OverlayShape","net.k1ra.kotlin_qr_scanner.OverlayShape.valueOf"]},{"name":"fun valueOf(value: String): PermissionStatus","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionStatus.valueOf","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PermissionStatus","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionStatus.valueOf"]},{"name":"fun valueOf(value: String): PermissionType","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionType.valueOf","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PermissionType","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionType.valueOf"]},{"name":"fun values(): Array<CameraLens>","description":"net.k1ra.kotlin_qr_scanner.CameraLens.values","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-camera-lens/values.html","searchKeys":["values","fun values(): Array<CameraLens>","net.k1ra.kotlin_qr_scanner.CameraLens.values"]},{"name":"fun values(): Array<OverlayShape>","description":"net.k1ra.kotlin_qr_scanner.OverlayShape.values","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-overlay-shape/values.html","searchKeys":["values","fun values(): Array<OverlayShape>","net.k1ra.kotlin_qr_scanner.OverlayShape.values"]},{"name":"fun values(): Array<PermissionStatus>","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionStatus.values","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-status/values.html","searchKeys":["values","fun values(): Array<PermissionStatus>","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionStatus.values"]},{"name":"fun values(): Array<PermissionType>","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionType.values","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-type/values.html","searchKeys":["values","fun values(): Array<PermissionType>","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionType.values"]},{"name":"inline fun Modifier.noRippleClickable(isSingleClickable: Boolean = false, crossinline onClick: () -> Unit): Modifier","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.noRippleClickable","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker/no-ripple-clickable.html","searchKeys":["noRippleClickable","inline fun Modifier.noRippleClickable(isSingleClickable: Boolean = false, crossinline onClick: () -> Unit): Modifier","net.k1ra.kotlin_qr_scanner.kmpImagePicker.noRippleClickable"]},{"name":"interface PermissionCallback","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionCallback","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-callback/index.html","searchKeys":["PermissionCallback","interface PermissionCallback","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionCallback"]},{"name":"interface PermissionHandler","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionHandler","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-handler/index.html","searchKeys":["PermissionHandler","interface PermissionHandler","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionHandler"]},{"name":"lateinit var captureSession: AVCaptureSession","description":"net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.captureSession","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-scanner-camera-coordinator/capture-session.html","searchKeys":["captureSession","lateinit var captureSession: AVCaptureSession","net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.captureSession"]},{"name":"object Companion","description":"net.k1ra.kotlin_qr_scanner.QRCodeAnalyzer.Companion","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-q-r-code-analyzer/-companion/index.html","searchKeys":["Companion","object Companion","net.k1ra.kotlin_qr_scanner.QRCodeAnalyzer.Companion"]},{"name":"open class BarcodeAnalyser(onQrCodeScanned: (result: String?) -> Unit) : ImageAnalysis.Analyzer","description":"net.k1ra.kotlin_qr_scanner.BarcodeAnalyser","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-barcode-analyser/index.html","searchKeys":["BarcodeAnalyser","open class BarcodeAnalyser(onQrCodeScanned: (result: String?) -> Unit) : ImageAnalysis.Analyzer","net.k1ra.kotlin_qr_scanner.BarcodeAnalyser"]},{"name":"open override fun analyze(image: ImageProxy)","description":"net.k1ra.kotlin_qr_scanner.BarcodeAnalyser.analyze","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-barcode-analyser/analyze.html","searchKeys":["analyze","open override fun analyze(image: ImageProxy)","net.k1ra.kotlin_qr_scanner.BarcodeAnalyser.analyze"]},{"name":"open override fun analyze(image: ImageProxy)","description":"net.k1ra.kotlin_qr_scanner.QRCodeAnalyzer.analyze","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-q-r-code-analyzer/analyze.html","searchKeys":["analyze","open override fun analyze(image: ImageProxy)","net.k1ra.kotlin_qr_scanner.QRCodeAnalyzer.analyze"]},{"name":"open override fun captureOutput(output: AVCaptureOutput, didOutputMetadataObjects: List<*>, fromConnection: AVCaptureConnection)","description":"net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.captureOutput","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-scanner-camera-coordinator/capture-output.html","searchKeys":["captureOutput","open override fun captureOutput(output: AVCaptureOutput, didOutputMetadataObjects: List<*>, fromConnection: AVCaptureConnection)","net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.captureOutput"]},{"name":"val camera: AVCaptureDevice","description":"net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.camera","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-scanner-camera-coordinator/camera.html","searchKeys":["camera","val camera: AVCaptureDevice","net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.camera"]},{"name":"val entries: EnumEntries<CameraLens>","description":"net.k1ra.kotlin_qr_scanner.CameraLens.entries","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-camera-lens/entries.html","searchKeys":["entries","val entries: EnumEntries<CameraLens>","net.k1ra.kotlin_qr_scanner.CameraLens.entries"]},{"name":"val entries: EnumEntries<OverlayShape>","description":"net.k1ra.kotlin_qr_scanner.OverlayShape.entries","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-overlay-shape/entries.html","searchKeys":["entries","val entries: EnumEntries<OverlayShape>","net.k1ra.kotlin_qr_scanner.OverlayShape.entries"]},{"name":"val entries: EnumEntries<PermissionStatus>","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionStatus.entries","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-status/entries.html","searchKeys":["entries","val entries: EnumEntries<PermissionStatus>","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionStatus.entries"]},{"name":"val entries: EnumEntries<PermissionType>","description":"net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionType.entries","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils/-permission-type/entries.html","searchKeys":["entries","val entries: EnumEntries<PermissionType>","net.k1ra.kotlin_qr_scanner.kmpImagePicker.utils.PermissionType.entries"]},{"name":"val onScanned: (String) -> Unit","description":"net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.onScanned","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-scanner-camera-coordinator/on-scanned.html","searchKeys":["onScanned","val onScanned: (String) -> Unit","net.k1ra.kotlin_qr_scanner.ScannerCameraCoordinator.onScanned"]},{"name":"val orientationChanged: (UIDeviceOrientation) -> Unit","description":"net.k1ra.kotlin_qr_scanner.OrientationListener.orientationChanged","location":"-kotlin-multiplatform-qr-scanner/net.k1ra.kotlin_qr_scanner/-orientation-listener/orientation-changed.html","searchKeys":["orientationChanged","val orientationChanged: (UIDeviceOrientation) -> Unit","net.k1ra.kotlin_qr_scanner.OrientationListener.orientationChanged"]}]